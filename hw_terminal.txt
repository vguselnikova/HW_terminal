JSON
 4. Создать внешний репозиторий c названием JSON. (в гитхабе создаем репозиторий)
 5. Клонировать репозиторий JSON на локальный компьютер. (в гитбаш: git clone с HTTPS)
 6. Внутри локального JSON создать файл “new.json”. (git touch new.json)
 7. Добавить файл под гит. (git add .)
 8. Закоммитить файл.(git commit -m "add new.json)
 9. Отправить файл на внешний GitHub репозиторий.(git push)
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.(vim new.json)
 11. Отправить изменения на внешний репозиторий.(git commit -am "upd")
 12. Создать файл preferences.json (touch preferences.json)
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.(vim preferences.json)
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON(vim sklls.json)
 15. Отправить сразу 2 файла на внешний репозиторий.(git add . | git commit -m "add"
 16. На веб интерфейсе создать файл bug_report.json.( на гитхабе: add file --> create new file)
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON (git pull)

 для частей xml и txt были использованы те же команды, что и для части с json.
